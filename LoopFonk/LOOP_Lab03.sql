DECLARE @USERID AS INT
DECLARE @ADDRESSID AS INT
DECLARE @DATE_ AS DATETIME
DECLARE @STATUS AS INT=1
DECLARE @TOTALPRICE AS FLOAT
DECLARE @RAND AS INT

DECLARE @ORDERID AS INT
DECLARE @ITEMID AS INT
DECLARE @AMOUNT AS INT
DECLARE @UNITPRICE AS FLOAT
DECLARE @LINETOTAL AS FLOAT

/** NEWID() Statement
Generates a unique identifier (UUID) value of type uniqueidentifier,
	which is typically used for creating random, globally unique identifiers within SQL Server databases.
*/

SELECT TOP 1 @USERID =ID FROM USERS ORDER BY NEWID()
SELECT TOP 1 @ADDRESSID=ID FROM ADDRESS  WHERE USERID =6649 ORDER BY NEWID()
SET @RAND =RAND()*365
SET @DATE_ =DATEADD(DAY,@RAND,'2022-01-01')-- 2022-01-01 - 2023-01-01
SET @RAND =RAND()*86400
SET @DATE_ =DATEADD(SECOND,@RAND,@DATE_)

INSERT INTO ORDERS (USERID,ADDRESSID,DATE_,STATUS_,TOTALPRICE)
VALUES (@USERID,@ADDRESSID,@DATE_,@STATUS,@TOTALPRICE)

-- @@IDENTITY : last-inserted identity value in the current session. 
--				en son deðiþmiþ deðer
SELECT @ORDERID=@@IDENTITY
SELECT TOP 1 @ITEMID =ID,@UNITPRICE =UNITPRICE FROM ITEMS ORDER BY NEWID()
SET @RAND=1+RAND()*9
SET @AMOUNT =@RAND 
SET @LINETOTAL=@AMOUNT*@UNITPRICE

INSERT INTO ORDERDETAILS(ORDERID,ITEMID,AMOUNT,UNITPRICE,LINETOTAL)
VALUES (@ORDERID,@ITEMID,@AMOUNT,@UNITPRICE,@LINETOTAL)

UPDATE ORDERS SET TOTALPRICE=(SELECT SUM(LINETOTAL) FROM ORDERDETAILS WHERE ORDERID=ORDERS.ID)
WHERE ID=@ORDERID
GO 1000


SELECT * FROM ORDERS
SELECT * FROM ORDERDETAILS 
 
 

--SELECT @USERID USERID,@ADDRESSID ADDRESSID,@DATE_ DATE_,@TOTALPRICE TOTALPRICE 


--SELECT * FROM ORDERS

--SELECT * FROM ORDERDETAILS