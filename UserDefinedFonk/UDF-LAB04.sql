
ALTER FUNCTION dbo.FNLAB04
(
	-- Add the parameters for the function here
	@ID INT,
	@BIRTHDATE DATE
)
RETURNS 
@RESULT TABLE 
(
	-- Add the column definitions for the TABLE variable here
	AGE INT,
	AGEGROUP VARCHAR(100),
	BACKUPCOUNT INT,
	REALCOUNT INT,
	TOTAL_MATCHCOUNT INT,
	TOTAL_TEAMCOUNT INT,
	TOTAL_PLAYINGYEAR INT
)
AS
BEGIN
	-- Fill the table variable with the rows for your result set
	INSERT INTO @RESULT(AGE,AGEGROUP,BACKUPCOUNT,REALCOUNT,TOTAL_MATCHCOUNT,TOTAL_TEAMCOUNT,TOTAL_PLAYINGYEAR)
	SELECT DATEDIFF(YEAR,BIRTHDATE,GETDATE()) AGE, 
	CASE
	WHEN DATEDIFF(YEAR,@BIRTHDATE,GETDATE())BETWEEN 10 AND 19 THEN '10-19 ARASI'
	WHEN DATEDIFF(YEAR,@BIRTHDATE,GETDATE())BETWEEN 20 AND 29 THEN '20-29 ARASI'
	WHEN DATEDIFF(YEAR,@BIRTHDATE,GETDATE())BETWEEN 30 AND 40 THEN '30-40 ARASI'
	WHEN DATEDIFF(YEAR,@BIRTHDATE,GETDATE())>40 THEN '40 TAN BÜYÜK'
	END AS AGEGROUP,
	(SELECT COUNT(*) FROM MATCH_PLAYER WHERE PLAYERID=P.PLAYER_API_ID AND PLAYERTYPE = 'BACKUP') BACKUPCOUNT,
	(SELECT COUNT(*) FROM MATCH_PLAYER WHERE PLAYERID=P.PLAYER_API_ID AND PLAYERTYPE = 'REAL') REALCOUNT,
	(SELECT COUNT(*) FROM MATCH_PLAYER WHERE PLAYERID=P.PLAYER_API_ID) TOTAL_MATCHCOUNT,
	(SELECT COUNT(DISTINCT TEAM) FROM MATCH_PLAYER WHERE PLAYERID=P.PLAYER_API_ID) TOTAL_TEAMCOUNT,
	(SELECT DATEDIFF(YEAR,MIN(DATE_),MAX(DATE_)) FROM MATCH_PLAYER WHERE PLAYERID=P.PLAYER_API_ID) TOTAL_PLAYINGYEAR
	 
	FROM PLAYER P WHERE ID=@ID

	RETURN 
END
GO
SELECT *,LAB04.AGE,LAB04.AGEGROUP,LAB04.BACKUPCOUNT,LAB04.REALCOUNT,LAB04.TOTAL_MATCHCOUNT,LAB04.TOTAL_TEAMCOUNT,LAB04.TOTAL_PLAYINGYEAR FROM PLAYER P
CROSS APPLY(SELECT * FROM FNLAB04(P.ID,P.BIRTHDATE)) LAB04
--SELECT * FROM FNLAB04((SELECT TOP 1 ID FROM PLAYER),(SELECT TOP 1BIRTHDATE FROM PLAYER))